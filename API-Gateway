API-Gateway
1. API gateway provides a unified interface for a set of microservices so that clients no need to know about all the details of microservices internals.
2. API Gateway centralizes cross cutting concerns like security , monitoring and rate limiting etc
3. Spring cloud provides spring cloud gateway to create API gateway

manually adding the routes to the api gateway -Dev Steps:
1. create spring boot project as microservices (api=gateway)
   add eureka client, actuator and spring-cloud-starter-gateway-mvc dependency and dont forget to remove mvc in this dependency
2. Register API-gateway as Eureka client to the eureka server that is service registry
3. configure API gateway routes and test using post man

NOTE:finally run the rest employee rest api and change the port number to 9191 which is api gateway's port number
http://localhost:9191/api/employees/4
#routes for employee
spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**

#routes for department
spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**

automatically adding the routes to the api-gateway
